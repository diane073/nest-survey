type UserOutcome {
  survey_id: Int!
  user_id: Int!
  question_id: Int!
  total_score: Int!
  user_answer: [String!]!
  survey: Survey!
  question: Question!
  user_survey: UserSurvey!
}

input CreateUserOutcomeInput {
  survey_id: Int!
  user_id: Int!
  question_id: Int!
  total_score: Int!
  user_answer: [String!]!
}

input UpdateUserOutcomeInput {
  total_score: Int!
  user_answer: [String!]!
}

extend type Query {
  getUserOutcome(
    survey_id: Int!
    user_id: Int!
    question_id: Int!
  ): UserOutcome!
  getAllUserOutcomesBySurvey(survey_id: Int!): [UserOutcome]!
}

extend type Mutation {
  createUserOutcome(input: CreateUserOutcomeInput!): UserOutcome!
  updateUserOutcome(
    survey_id: Int!
    user_id: Int!
    question_id: Int!
    input: UpdateUserOutcomeInput!
  ): UserOutcome!
  deleteUserOutcome(
    surveyId: Int!
    userId: Int!
    questionId: Int!
  ): UserOutcome!
}
